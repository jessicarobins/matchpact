# This is a basic workflow to help you get started with Actions

name: Web

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install
      - name: Build
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: build
        env:
          REACT_APP_TOG_FIREBASE_API_KEY: ${{ secrets.PROD_REACT_APP_TOG_FIREBASE_API_KEY }}
          REACT_APP_TOG_FIREBASE_AUTH_DOMAIN: ${{secrets.PROD_REACT_APP_TOG_FIREBASE_AUTH_DOMAIN}}
          REACT_APP_TOG_FIREBASE_DATABASE_URL: ${{secrets.PROD_REACT_APP_TOG_FIREBASE_DATABASE_URL}}
          REACT_APP_TOG_FIREBASE_PROJECT_ID: ${{secrets.PROD_REACT_APP_TOG_FIREBASE_PROJECT_ID}}
          REACT_APP_TOG_FIREBASE_STORAGE_BUCKET: ${{secrets.PROD_REACT_APP_TOG_FIREBASE_STORAGE_BUCKET}}
          REACT_APP_TOG_FIREBASE_MESSAGING_SENDER_ID: ${{secrets.PROD_REACT_APP_TOG_FIREBASE_MESSAGING_SENDER_ID}}
          REACT_APP_TOG_FIREBASE_APP_ID: ${{secrets.PROD_REACT_APP_TOG_FIREBASE_APP_ID}}
          REACT_APP_TOG_FIREBASE_MEASUREMENT_ID: ${{secrets.PROD_REACT_APP_TOG_FIREBASE_MEASUREMENT_ID}}
      - name: Archive Build
        uses: actions/upload-artifact@master
        with:
          name: build
          path: build

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      SENTRY_DEPLOY_ENVIRONMENT: prod
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Download Build
        uses: actions/download-artifact@master
        with:
          name: build
          path: build
      - name: Deploy Prod to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy -P prod --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Install sentry cli
        run: |
          # Install Sentry CLI
          curl -sL https://sentry.io/get-cli/ | bash
      - name: Deploy Sentry release
        env:
          SENTRY_DEPLOY_ENVIRONMENT: prod
        run: |
          # Create new Sentry release
          export SENTRY_RELEASE=$(sentry-cli releases propose-version)
          sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
          sentry-cli releases set-commits --auto $SENTRY_RELEASE
          sentry-cli releases finalize $SENTRY_RELEASE
          sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_DEPLOY_ENVIRONMENT
